C51 COMPILER V9.60.0.0   SEEKFREE_IIC                                                      08/05/2020 22:00:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SEEKFREE_IIC
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_IIC.obj
COMPILER INVOKED BY: D:\keil_v5\C51\BIN\C51.EXE ..\Libraries\seekfree_peripheral\SEEKFREE_IIC.c LARGE OPTIMIZE(8,SPEED) 
                    -BROWSE MODP2 INCDIR(..\Libraries\libraries;..\Libraries\seekfree_libraries;..\Libraries\seekfree_peripheral;..\USER\inc;
                    -..\USER\src;..\Libraries\Control) DEBUG OBJECTEXTEND PRINT(.\Out_File\SEEKFREE_IIC.lst) TABS(2) OBJECT(.\Out_File\SEEKFR
                    -EE_IIC.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2018,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：179029047
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          模拟IIC
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ3184284598)
  13           * @version       查看common.h内VERSION宏定义
  14           * @Software    IAR 7.8 or MDK 5.24a
  15           * @Target core   LPC54606J512BD100
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2018-05-24
  18           * @note    
  19                    接线定义：
  20                    ------------------------------------ 
  21                      SCL                 查看SEEKFREE_IIC文件内的SEEKFREE_SCL宏定义
  22                      SDA                 查看SEEKFREE_IIC文件内的SEEKFREE_SDA宏定义
  23                    ------------------------------------ 
  24           *********************************************************************************************************
             -***********/
  25          
  26          
  27          #include "SEEKFREE_IIC.h"
  28          
  29          
  30          
  31          
  32          
  33          #define SDA             SIMIIC_SDA_PIN
  34          #define SDA0()          SIMIIC_SDA_PIN = 0    //IO口输出低电平
  35          #define SDA1()          SIMIIC_SDA_PIN = 1    //IO口输出高电平  
  36          #define SCL0()          SIMIIC_SCL_PIN = 0    //IO口输出低电平
  37          #define SCL1()          SIMIIC_SCL_PIN = 1    //IO口输出高电平
  38          
  39          
  40          //内部数据定义
  41          uint8 IIC_ad_main; //器件从地址     
  42          uint8 IIC_ad_sub;  //器件子地址    
  43          uint8 *IIC_buf;    //发送|接收数据缓冲区      
  44          uint8 IIC_num;     //发送|接收数据个数       
  45          
  46          #define ack 1      //主应答
  47          #define no_ack 0   //从应答  
  48          
  49          //--------------------------------------------------------------------------------------------------------
             ------------
C51 COMPILER V9.60.0.0   SEEKFREE_IIC                                                      08/05/2020 22:00:19 PAGE 2   

  50          //  @brief      模拟IIC初始化
  51          //  @return     void            
  52          //  @since      v1.0
  53          //  Sample usage:       
  54          //--------------------------------------------------------------------------------------------------------
             ------------
  55          void  simiic_init(void)
  56          {
  57   1        //GPIO已在board_init()中初始化。
  58   1      }
  59          
  60          //--------------------------------------------------------------------------------------------------------
             ------------
  61          //  @brief      模拟IIC延时
  62          //  @return     void            
  63          //  @since      v1.0
  64          //  Sample usage:       如果IIC通讯失败可以尝试增加j的值
  65          //--------------------------------------------------------------------------------------------------------
             ------------
  66          void simiic_delay(void)
  67          {
  68   1          uint16 j=20;   
  69   1        while(j--);
  70   1      }
  71          
  72          
  73          //内部使用，用户无需调用
  74          void simiic_start(void)
  75          {
  76   1        SDA1();
  77   1        SCL1();
  78   1        simiic_delay();
  79   1        SDA0();
  80   1        simiic_delay();
  81   1        SCL0();
  82   1      }
  83          
  84          //内部使用，用户无需调用
  85          void simiic_stop(void)
  86          {
  87   1        SDA0();
  88   1        SCL0();
  89   1        simiic_delay();
  90   1        SCL1();
  91   1        simiic_delay();
  92   1        SDA1();
  93   1        simiic_delay();
  94   1      }
  95          
  96          //主应答(包含ack:SDA=0和no_ack:SDA=0)
  97          //内部使用，用户无需调用
  98          void simiic_sendack(unsigned char ack_dat)
  99          {
 100   1          SCL0();
 101   1        simiic_delay();
 102   1        if(ack_dat) SDA0();
 103   1          else      SDA1();
 104   1      
 105   1          SCL1();
 106   1          simiic_delay();
 107   1          SCL0();
 108   1          simiic_delay();
C51 COMPILER V9.60.0.0   SEEKFREE_IIC                                                      08/05/2020 22:00:19 PAGE 3   

 109   1      }
 110          
 111          
 112          static int sccb_waitack(void)
 113          {
 114   1          SCL0();
 115   1      
 116   1        simiic_delay();
 117   1        
 118   1        SCL1();
 119   1          simiic_delay();
 120   1        
 121   1          if(SDA)           //应答为高电平，异常，通信失败
 122   1          {
 123   2      
 124   2              SCL0();
 125   2              return 0;
 126   2          }
 127   1      
 128   1          SCL0();
 129   1        simiic_delay();
 130   1          return 1;
 131   1      }
 132          
 133          //字节发送程序
 134          //发送c(可以是数据也可是地址)，送完后接收从应答
 135          //不考虑从应答位
 136          //内部使用，用户无需调用
 137          void send_ch(uint8 c)
 138          {
 139   1        uint8 i = 8;
 140   1          while(i--)
 141   1          {
 142   2              if(c & 0x80)  SDA1();//SDA 输出数据
 143   2              else      SDA0();
 144   2              c <<= 1;
 145   2              simiic_delay();
 146   2              SCL1();                //SCL 拉高，采集信号
 147   2              simiic_delay();
 148   2              SCL0();                //SCL 时钟线拉低
 149   2          }
 150   1        sccb_waitack();
 151   1      }
 152          
 153          //字节接收程序
 154          //接收器件传来的数据，此程序应配合|主应答函数|使用
 155          //内部使用，用户无需调用
 156          uint8 read_ch(uint8 ack_x)
 157          {
 158   1          uint8 i;
 159   1          uint8 c;
 160   1          c=0;
 161   1          SCL0();
 162   1          simiic_delay();
 163   1          SDA1();             
 164   1      
 165   1          for(i=0;i<8;i++)
 166   1          {
 167   2              simiic_delay();
 168   2              SCL0();         //置时钟线为低，准备接收数据位
 169   2              simiic_delay();
 170   2              SCL1();         //置时钟线为高，使数据线上数据有效
C51 COMPILER V9.60.0.0   SEEKFREE_IIC                                                      08/05/2020 22:00:19 PAGE 4   

 171   2              simiic_delay();
 172   2              c<<=1;
 173   2              if(SDA) 
 174   2              {
 175   3                  c+=1;   //读数据位，将接收的数据存c
 176   3              }
 177   2          }
 178   1      
 179   1        SCL0();
 180   1        simiic_delay();
 181   1        simiic_sendack(ack_x);
 182   1        
 183   1          return c;
 184   1      }
 185          
 186          //--------------------------------------------------------------------------------------------------------
             ------------
 187          //  @brief      模拟IIC写数据到设备寄存器函数
 188          //  @param      dev_add     设备地址(低七位地址)
 189          //  @param      reg       寄存器地址
 190          //  @param      dat       写入的数据
 191          //  @return     void            
 192          //  @since      v1.0
 193          //  Sample usage:       
 194          //--------------------------------------------------------------------------------------------------------
             ------------
 195          void simiic_write_reg(uint8 dev_add, uint8 reg, uint8 dat)
 196          {
 197   1        simiic_start();
 198   1          send_ch( (dev_add<<1) | 0x00);   //发送器件地址加写位
 199   1        send_ch( reg );            //发送从机寄存器地址
 200   1        send_ch( dat );            //发送需要写入的数据
 201   1        simiic_stop();
 202   1      }
 203          
 204          
 205          //--------------------------------------------------------------------------------------------------------
             ------------
 206          //  @brief      模拟IIC从设备寄存器读取数据
 207          //  @param      dev_add     设备地址(低七位地址)
 208          //  @param      reg       寄存器地址
 209          //  @param      type      选择通信方式是IIC  还是 SCCB
 210          //  @return     uint8     返回寄存器的数据      
 211          //  @since      v1.0
 212          //  Sample usage:       
 213          //--------------------------------------------------------------------------------------------------------
             ------------
 214          uint8 simiic_read_reg(uint8 dev_add, uint8 reg, IIC_type type)
 215          {
 216   1        uint8 dat;
 217   1        simiic_start();
 218   1          send_ch( (dev_add<<1) | 0x00);  //发送器件地址加写位
 219   1        send_ch( reg );           //发送从机寄存器地址
 220   1        if(type == SCCB)simiic_stop();
 221   1        
 222   1        simiic_start();
 223   1        send_ch( (dev_add<<1) | 0x01);  //发送器件地址加读位
 224   1        dat = read_ch(no_ack);          //读取数据
 225   1        simiic_stop();
 226   1        
 227   1        return dat;
 228   1      }
C51 COMPILER V9.60.0.0   SEEKFREE_IIC                                                      08/05/2020 22:00:19 PAGE 5   

 229          
 230          //--------------------------------------------------------------------------------------------------------
             ------------
 231          //  @brief      模拟IIC读取多字节数据
 232          //  @param      dev_add     设备地址(低七位地址)
 233          //  @param      reg       寄存器地址
 234          //  @param      dat_add     数据保存的地址指针
 235          //  @param      num       读取字节数量
 236          //  @param      type      选择通信方式是IIC  还是 SCCB
 237          //  @return     uint8     返回寄存器的数据      
 238          //  @since      v1.0
 239          //  Sample usage:       
 240          //--------------------------------------------------------------------------------------------------------
             ------------
 241          void simiic_read_regs(uint8 dev_add, uint8 reg, uint8 *dat_add, uint8 num, IIC_type type)
 242          {
 243   1        simiic_start();
 244   1          send_ch( (dev_add<<1) | 0x00);  //发送器件地址加写位
 245   1        send_ch( reg );           //发送从机寄存器地址
 246   1        if(type == SCCB)simiic_stop();
 247   1        
 248   1        simiic_start();
 249   1        send_ch( (dev_add<<1) | 0x01);  //发送器件地址加读位
 250   1          while(--num)
 251   1          {
 252   2              *dat_add = read_ch(ack); //读取数据
 253   2              dat_add++;
 254   2          }
 255   1          *dat_add = read_ch(no_ack); //读取数据
 256   1        simiic_stop();
 257   1      }
 258          
 259          
 260          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    395    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
